
plugins {
    id 'java'
    id 'application'
    id 'maven-publish'
    id 'org.springframework.boot' version '2.7.2'
}

group = 'com.lostsidewalk'
version = '0.4-dev5'
sourceCompatibility = "1.8"
targetCompatibility = "1.8"

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = "GitHubPackages_1"
        url = uri("https://maven.pkg.github.com/meharris-bnr/skyproc")
        credentials {
            username = project.findProperty("repo.user") ?: System.getenv("SKYPROC_REPO_USER")
            password = project.findProperty("repo.token") ?: System.getenv("SKYPROC_REPO_TOKEN")
        }
    }
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/meharris-bnr/lev")
        credentials {
            username = project.findProperty("repo.user") ?: System.getenv("SKYPROC_REPO_USER")
            password = project.findProperty("repo.token") ?: System.getenv("SKYPROC_REPO_TOKEN")
        }
    }
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

    implementation 'com.lostsidewalk:skyproc-starter:0.4-dev5'

    implementation 'org.ini4j:ini4j:0.5.4'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

application {
    mainClassName = 'skyprocstarter.SkyProcStarter'
}

test {
    useJUnitPlatform()
}

task cleanModDist(type: Delete) {
    delete 'mod_dist'
}

task setupModDist_Interface (type: Copy) {
    from("Data/Interface")
    include "**/*"
    destinationDir file("mod_dist/data/Interface")
}

task setupModDist_Scripts(type: Copy) {
    from ("Data/Scripts")
    include "**/*"
    destinationDir file("mod_dist/data/Scripts")
}

task setupModDist_SkyProc_BlockList(type: Copy) {
    from (".")
    include "BlockList.txt"
    destinationDir file("mod_dist/data/SkyProc Patchers/ASIS/Files")
}

task setupModDist_SkyProc_TweakInis(type: Copy) {
    from ("TweakInis")
    include "**/*"
    destinationDir file("mod_dist/data/SkyProc Patchers/ASIS/TweakInis")
}

task setupModDist_SkyProc_Patcher_Support(type: Copy) {
    from (".")
    include "ASIS.bat", "ASIS.ini", "AutomaticPerks.ini", "AutomaticSpells.ini", "customizedAI.ini",
            "customizedGMSTs.ini", "IncreasedSpawns.ini", "NPCEnchantFix.ini", "NPCPotions.ini", "RandomSpawns.ini"
    destinationDir file("mod_dist/data/SkyProc Patchers/ASIS")
}

task setupModDist_SkyProc_Patcher_Jar(type: Copy) {
    dependsOn build
    from ("build/libs")
    include "asis-${project.version}.jar"
    destinationDir file("mod_dist/data/SkyProc Patchers/ASIS")
    rename "asis-${project.version}.jar", "asis.jar"
}

task setupModDist_ASIS_DependencyPlugin(type: Copy) {
    from ("Data")
    include "ASIS-Dependency.esp"
    destinationDir file("mod_dist/data")
}

// TODO: fix this
task setupModDist_ASIS_EmptyPlugin(type: Copy) {
    from("Data")
    include "ASIS-Dependency.esp"
    destinationDir file("mod_dist/data")
    rename "ASIS-Dependency.esp", "ASIS.esp"
}

task setupModDist_zipArtifact(type: Zip) {
    dependsOn setupModDist_Interface
    dependsOn setupModDist_Scripts
    dependsOn setupModDist_SkyProc_BlockList
    dependsOn setupModDist_SkyProc_TweakInis
    dependsOn setupModDist_SkyProc_Patcher_Support
    dependsOn setupModDist_SkyProc_Patcher_Jar
    dependsOn setupModDist_ASIS_DependencyPlugin
    dependsOn setupModDist_ASIS_EmptyPlugin

    from "mod_dist"
    include "data/**"
    archiveName "ASIS SEE-10859-0-4-0.zip"
    destinationDir(file("mod_dist/"))
}

task modDist {
    dependsOn cleanModDist
    dependsOn setupModDist_zipArtifact
}

publishing {
    repositories {
        maven {
            name = 'GitHubPackages'
            url = uri("https://maven.pkg.github.com/meharris-bnr/ASIS")
            credentials {
                username = project.findProperty("publishing.user") ?: System.getenv("ASIS_PUBLISHING_USER")
                password = project.findProperty("publishing.token") ?: System.getenv("ASIS_PUBLISHING_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

